#!/usr/bin/env python
#============================
# COPYRIGHT BSD LICENSE
# ===========================
# PVIZ MODULE
#         http://pviz.net
# Author: A. Ruiz 
#         http://ruizanthony.net
# Creation date: 02/02/12
# ===========================
# This script transform a paraview state file generated by the GUI into 
# a new pvsm file that can be used in batch (with pviz.py)
# ===========================
from xml.etree import ElementTree
import sys

if len(sys.argv)==1:
  print "usage: pviz_pvsmPrepare.py state1.pvsm state2.pvsm ..."
  print "exiting ..."
  exit()

# loop on all input state files
for stateFileName in sys.argv[1:]:
  print 'Processing state file ',stateFileName,'...'

  # Create the element tree object
  tree = ElementTree.parse ( stateFileName )
  root = tree.getroot()
  # ============
  # Find all Properties with the attribute: 'name' = Enabled, and get the
  # subelement Element
  # // : Selects all subelements, on all levels beneath the current element. 
  # For example, .//egg selects all egg elements in the entire tree.
  # ============
  for elem in root.findall(".//Property[@name='Enabled']/Element"):
    elem.set("value",'0')

  # Now change the name of the input file name so and use the keyword solut.xdmf,
  # that is then changed in pviz.py
  # There's only one element so one could use 
  #    elem = root.findall(".//Property[@name='FileName']/Element")[0]
  # or 
  #    elem = root.find   (".//Property[@name='FileName']/Element")
  # But also works with iterator on list topelems
  for elem in root.findall(".//Property[@name='FileName']/Element"):
    elem.set("value",'solut.xdmf')

  # Now remove the property manager
  # Slightly different than above because to remove a child from a parent
  # we need to have the reference to both
  parent = root.findall(".//ServerManagerState")[0]
  for child in parent:
    if child.tag == 'GlobalPropertiesManagers':
        parent.remove(child)

  # Overwrite original state file (this is safe: if rerun this script on an
  # already processed state file, won't change anything
  tree.write(stateFileName)
print "Done!"
